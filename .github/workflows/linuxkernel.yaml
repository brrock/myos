name: Fetch Latest Linux Kernel v6.x Tar.xz
on:
  schedule:
    - cron: "0 12 * * *" # Runs every day at 12:00 UTC
  workflow_dispatch: # Allows manual triggering of the action
  push:
    branches:
      - main

jobs:
  get-latest-kernel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch and Inspect Page Content
        id: fetch_page
        run: |
          # Fetch the list of v6.x tar.xz files from the updated server link
          KERNEL_URL="https://mirrors.edge.kernel.org/pub/linux/kernel/v6.x/"
          echo "Fetching kernel list from $KERNEL_URL"
          
          # Fetch the page content
          curl -s $KERNEL_URL > page_content.html
          
          # Output the fetched page content for inspection
          echo "Fetched page content:"
          head -n 20 page_content.html

      - name: Extract Latest Linux Kernel v6.x Version
        id: extract_kernel
        run: |
          # Extract the latest linux-6.x.x.tar.xz file
          LATEST_KERNEL_TAR_XZ=$(grep -oP 'linux-\K6\.[\d.]+(?=\.tar\.xz)' page_content.html | sort -V | tail -n 1)

          if [ -z "$LATEST_KERNEL_TAR_XZ" ]; then
            echo "No new Linux v6.x tar.xz file found."
            echo "KERNEL_UPDATED=false" >> $GITHUB_ENV
            exit 0
          fi

          # Construct the full URL of the tar.xz file
          TAR_XZ_LINK="https://mirrors.edge.kernel.org/pub/linux/kernel/v6.x/linux-${LATEST_KERNEL_TAR_XZ}.tar.xz"
          
          echo "Latest Kernel v6.x Version: $LATEST_KERNEL_TAR_XZ"
          echo "Kernel tar.xz Link: $TAR_XZ_LINK"

          # Export the link as an environment variable
          echo "TAR_XZ_LINK=$TAR_XZ_LINK" >> $GITHUB_ENV
          echo "KERNEL_UPDATED=true" >> $GITHUB_ENV

      - name: Save Kernel tar.xz Link to kernel.txt
        if: env.KERNEL_UPDATED == 'true'
        run: |
          echo "${{ env.TAR_XZ_LINK }}" > kernel.txt

      - name: Commit kernel.txt to the repository
        if: env.KERNEL_UPDATED == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add kernel.txt
          git commit -m "Update kernel.txt with latest v6.x kernel tar.xz link"
          
          # Use the built-in GITHUB_TOKEN for authentication
          git push https://github.com/brrock/myos.git HEAD:main

      - name: Notify No New Kernel
        if: env.KERNEL_UPDATED == 'false'
        run: |
          echo "No new kernel was found. No update needed."